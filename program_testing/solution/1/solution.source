#include <iostream>
#include <string>
#include <algorithm>
using namespace std;
const int inf=1e9;
const int maxn=1000;
int DP[maxn+1][maxn+1][2][2];
string str;
int main()
{
 cin>>str;
 int m=0, n=str.length();
 for(int i=0;i<n;++i)
 m+=str[i]=='0';
 for(int i=0;i<=n;++i)
 for(int j=0;j<=maxn; ++j)
 DP[i][j][0][0] = DP[i][j][1][0] = DP[i][j][0][1] = DP[i][j][1][1] = inf;
 DP[0][0][0][0]=0;
 for(int i=1;i<=n;++i)
 {
 // добавляем 1
 for(int j=0;j<=i; ++j)
 { DP[i][j][0][0] = min(DP[i-1][j][0][0],DP[i-1][j][0][1]);
 DP[i][j][1][0] = min(DP[i-1][j][1][0],DP[i-1][j][1][1]);
 }
 // добавляем 0
 for(int j=1;j<=i; ++j)
 { // нет 00
 DP[i][j][0][1] = (str[i-1]=='1') + DP[i-1][j-1][0][0];
 // был 00 или добавляем 0 к ...0
 DP[i][j][1][1] = (str[i-1]=='1') +
min(DP[i-1][j-1][0][1], DP[i-1][j-1][1][0]);
 }
 }
 int r=min(DP[n][m][1][1],DP[n][m][1][0]);
 cout<<((r<inf)?r:-1)<<"\n";
}
